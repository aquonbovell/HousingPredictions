// This file was auto-generated by ML.NET Model Builder. 

using System;

namespace housing.ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            // Read the data from a file and for each line output each line in the file
            string dataPath = "../..//housing_price_dataset_test.csv";
            string[] dataLines = System.IO.File.ReadAllLines(dataPath);
            dataLines = dataLines[1..];
            foreach (string line in dataLines)
            {
                string[] dataValues = line.Split(',');

                // Create single instance of sample data from first line of dataset for model input
                Housing.ModelInput sampleData = new Housing.ModelInput()
                {
                    SquareFeet = float.Parse(dataValues[0]), // Parse the SquareFeet value from the data
                    Bedrooms = float.Parse(dataValues[1]), // Parse the Bedrooms value from the data
                    Bathrooms = float.Parse(dataValues[2]), // Parse the Bathrooms value from the data
                    Neighborhood = @$"{dataValues[3]}", // Set the Neighborhood value from the data
                    YearBuilt = float.Parse(dataValues[4]), // Parse the YearBuilt value from the data
                };

                // Use the model and Prediction Engine to predict on new sample data
                var predictionResult = Housing.Predict(sampleData);

                Console.WriteLine($"\nSquareFeet: {dataValues[0]}"); // Print the SquareFeet value
                Console.WriteLine($"\nBedrooms: {dataValues[1]}"); // Print the Bedrooms value
                Console.WriteLine($"\nBathrooms: {dataValues[2]}"); // Print the Bathrooms value
                Console.WriteLine($"\nNeighborhood: {dataValues[3]}"); // Print the Neighborhood value
                Console.WriteLine($"\nYearBuilt: {dataValues[4]}"); // Print the YearBuilt value
                Console.WriteLine($"\nActual Price: {dataValues[5]}"); // Print the actual price value
                Console.WriteLine($"\nPredicted Price: {predictionResult.Score}"); // Print the predicted price value
                Console.WriteLine($"\nError: {(predictionResult.Score - float.Parse(dataValues[5])) / float.Parse(dataValues[5]) * 100}"); // Calculate and print the error percentage
                Console.WriteLine("=============== End of process, hit any key to finish ===============");
                Console.ReadKey();

            }
        }
    }
}
